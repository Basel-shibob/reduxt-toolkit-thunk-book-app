{"ast":null,"code":"import { createSlice, createAsyncThunk } from \"@reduxjs/toolkit\";\nconst getBooks = createAsyncThunk('book/getBooks', async (_, thunkAPI) => {\n  try {\n    const res = await fetch(\"http://localhost:3005/books\");\n    const data = await res.json();\n    return data;\n  } catch (err) {\n    console.log(err);\n  }\n});\nconst bookSlice = createSlice({\n  name: 'book',\n  initialState: {\n    books: null\n  },\n  extraReducers: {\n    [getBooks.pending]: (state, action) => {\n      console.log(action);\n    },\n    [getBooks.fulfilled]: (state, action) => {\n      console.log(action);\n    },\n    [getBooks.rejected]: (state, action) => {\n      console.log(action);\n    }\n  }\n});\nexport default bookSlice;","map":{"version":3,"sources":["/home/ahmed/Documents/Basel's-work web/REACT JS/reduxt-toolkit-thunk-book-app/React/src/store/bookSlice.js"],"names":["createSlice","createAsyncThunk","getBooks","_","thunkAPI","res","fetch","data","json","err","console","log","bookSlice","name","initialState","books","extraReducers","pending","state","action","fulfilled","rejected"],"mappings":"AAAA,SAASA,WAAT,EAAsBC,gBAAtB,QAA8C,kBAA9C;AAEA,MAAMC,QAAQ,GAAGD,gBAAgB,CAAC,eAAD,EAAkB,OAAOE,CAAP,EAAUC,QAAV,KAAuB;AACtE,MAAI;AACA,UAAMC,GAAG,GAAG,MAAMC,KAAK,CAAC,6BAAD,CAAvB;AACA,UAAMC,IAAI,GAAG,MAAMF,GAAG,CAACG,IAAJ,EAAnB;AACA,WAAOD,IAAP;AACH,GAJD,CAIE,OAAOE,GAAP,EAAY;AACVC,IAAAA,OAAO,CAACC,GAAR,CAAYF,GAAZ;AACH;AACJ,CARgC,CAAjC;AAUA,MAAMG,SAAS,GAAGZ,WAAW,CAAC;AAC1Ba,EAAAA,IAAI,EAAE,MADoB;AAE1BC,EAAAA,YAAY,EAAE;AAAEC,IAAAA,KAAK,EAAE;AAAT,GAFY;AAG1BC,EAAAA,aAAa,EAAE;AACX,KAACd,QAAQ,CAACe,OAAV,GAAoB,CAACC,KAAD,EAAQC,MAAR,KAAmB;AACnCT,MAAAA,OAAO,CAACC,GAAR,CAAYQ,MAAZ;AACH,KAHU;AAIX,KAACjB,QAAQ,CAACkB,SAAV,GAAsB,CAACF,KAAD,EAAQC,MAAR,KAAmB;AACrCT,MAAAA,OAAO,CAACC,GAAR,CAAYQ,MAAZ;AACH,KANU;AAOX,KAACjB,QAAQ,CAACmB,QAAV,GAAqB,CAACH,KAAD,EAAQC,MAAR,KAAmB;AACpCT,MAAAA,OAAO,CAACC,GAAR,CAAYQ,MAAZ;AACH;AATU;AAHW,CAAD,CAA7B;AAgBA,eAAeP,SAAf","sourcesContent":["import { createSlice, createAsyncThunk } from \"@reduxjs/toolkit\";\n\nconst getBooks = createAsyncThunk('book/getBooks', async (_, thunkAPI) => {\n    try {\n        const res = await fetch(\"http://localhost:3005/books\");\n        const data = await res.json();\n        return data\n    } catch (err) {\n        console.log(err);\n    }\n})\n\nconst bookSlice = createSlice({\n    name: 'book',\n    initialState: { books: null },\n    extraReducers: {\n        [getBooks.pending]: (state, action) => {\n            console.log(action);\n        },\n        [getBooks.fulfilled]: (state, action) => {\n            console.log(action);\n        },\n        [getBooks.rejected]: (state, action) => {\n            console.log(action);\n        },\n    },\n})\n\nexport default bookSlice;\n"]},"metadata":{},"sourceType":"module"}