{"ast":null,"code":"import { createSlice, createAsyncThunk } from \"@reduxjs/toolkit\";\nexport const getBooks = createAsyncThunk('book/getBooks', async (_, thunkAPI) => {\n  const {\n    rejectWithValue\n  } = thunkAPI;\n\n  try {\n    const res = await fetch(\"http://localhost:3005/books\");\n    const data = await res.json();\n    return data;\n  } catch (err) {\n    console.log(err);\n  }\n});\nconst bookSlice = createSlice({\n  name: 'book',\n  initialState: {\n    books: [],\n    isLoading: false\n  },\n  extraReducers: {\n    [getBooks.pending]: (state, action) => {\n      state.isLoading = true;\n      console.log(action);\n    },\n    [getBooks.fulfilled]: (state, action) => {\n      state.isLoading = false;\n      console.log(action);\n    },\n    [getBooks.rejected]: (state, action) => {\n      state.isLoading = false;\n      console.log(action);\n    }\n  }\n});\nexport default bookSlice;","map":{"version":3,"sources":["/home/ahmed/Documents/Basel's-work web/REACT JS/reduxt-toolkit-thunk-book-app/React/src/store/bookSlice.js"],"names":["createSlice","createAsyncThunk","getBooks","_","thunkAPI","rejectWithValue","res","fetch","data","json","err","console","log","bookSlice","name","initialState","books","isLoading","extraReducers","pending","state","action","fulfilled","rejected"],"mappings":"AACA,SAASA,WAAT,EAAsBC,gBAAtB,QAA8C,kBAA9C;AAEA,OAAO,MAAMC,QAAQ,GAAGD,gBAAgB,CACpC,eADoC,EAGpC,OAAOE,CAAP,EAAUC,QAAV,KAAuB;AACnB,QAAM;AAAEC,IAAAA;AAAF,MAAsBD,QAA5B;;AACA,MAAI;AACA,UAAME,GAAG,GAAG,MAAMC,KAAK,CAAC,6BAAD,CAAvB;AACA,UAAMC,IAAI,GAAG,MAAMF,GAAG,CAACG,IAAJ,EAAnB;AACA,WAAOD,IAAP;AACH,GAJD,CAIE,OAAOE,GAAP,EAAY;AACVC,IAAAA,OAAO,CAACC,GAAR,CAAYF,GAAZ;AACH;AACJ,CAZmC,CAAjC;AAcP,MAAMG,SAAS,GAAGb,WAAW,CAAC;AAC1Bc,EAAAA,IAAI,EAAE,MADoB;AAE1BC,EAAAA,YAAY,EAAE;AAAEC,IAAAA,KAAK,EAAE,EAAT;AAAaC,IAAAA,SAAS,EAAE;AAAxB,GAFY;AAG1BC,EAAAA,aAAa,EAAE;AACX,KAAChB,QAAQ,CAACiB,OAAV,GAAoB,CAACC,KAAD,EAAQC,MAAR,KAAmB;AACnCD,MAAAA,KAAK,CAACH,SAAN,GAAkB,IAAlB;AACAN,MAAAA,OAAO,CAACC,GAAR,CAAYS,MAAZ;AACH,KAJU;AAKX,KAACnB,QAAQ,CAACoB,SAAV,GAAsB,CAACF,KAAD,EAAQC,MAAR,KAAmB;AACrCD,MAAAA,KAAK,CAACH,SAAN,GAAkB,KAAlB;AACAN,MAAAA,OAAO,CAACC,GAAR,CAAYS,MAAZ;AACH,KARU;AASX,KAACnB,QAAQ,CAACqB,QAAV,GAAqB,CAACH,KAAD,EAAQC,MAAR,KAAmB;AACpCD,MAAAA,KAAK,CAACH,SAAN,GAAkB,KAAlB;AACAN,MAAAA,OAAO,CAACC,GAAR,CAAYS,MAAZ;AACH;AAZU;AAHW,CAAD,CAA7B;AAmBA,eAAeR,SAAf","sourcesContent":["\nimport { createSlice, createAsyncThunk } from \"@reduxjs/toolkit\";\n\nexport const getBooks = createAsyncThunk(\n    'book/getBooks',\n\n    async (_, thunkAPI) => {\n        const { rejectWithValue } = thunkAPI;\n        try {\n            const res = await fetch(\"http://localhost:3005/books\");\n            const data = await res.json();\n            return data\n        } catch (err) {\n            console.log(err);\n        }\n    })\n\nconst bookSlice = createSlice({\n    name: 'book',\n    initialState: { books: [], isLoading: false },\n    extraReducers: {\n        [getBooks.pending]: (state, action) => {\n            state.isLoading = true;\n            console.log(action);\n        },\n        [getBooks.fulfilled]: (state, action) => {\n            state.isLoading = false;\n            console.log(action);\n        },\n        [getBooks.rejected]: (state, action) => {\n            state.isLoading = false;\n            console.log(action);\n        },\n    },\n})\n\nexport default bookSlice;\n"]},"metadata":{},"sourceType":"module"}